/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ConfiguracionDialog.java
 *
 * Created on 27-may-2011, 14:26:25
 */
package es.cvjpy.aplicacion;

import es.cvjpy.GuiPro;
import es.cvjpy.PrincipalUIPro;
import es.cvjpy.util.ModeloGuiPro;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

/**
 *
 * @author CarlosVJ
 */
public class ConfiguracionDialog extends javax.swing.JDialog implements GuiPro {

    public ConfiguracionDialog() {
        this(new JFrame(), true);
    }

    /**
     * Creates new form ConfiguracionDialog
     * @param parent
     * @param modal
     */
    public ConfiguracionDialog(JFrame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jPanel2 = new javax.swing.JPanel();
        jCheckBox3 = new javax.swing.JCheckBox();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        versionSeguridadPanel1 = new es.cvjpy.aplicacion.VersionPanel();
        entornoCobolPanel1 = new es.cvjpy.cobol.EntornoCobolPanel();

        setLocationByPlatform(true);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${datos.tituloConfiguracion}"), this, org.jdesktop.beansbinding.BeanProperty.create("title"));
        bindingGroup.addBinding(binding);

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("seguridadlit"); // NOI18N
        jCheckBox3.setText(bundle.getString("Mostrar_configuracion_al_iniciar")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${datos.configuracion.mostrarInicial}"), jCheckBox3, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jPanel2.add(jCheckBox3);

        jButton3.setText(bundle.getString("Cancelar")); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3);

        jButton4.setText(bundle.getString("Aceptar")); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${datos.configuracion.versionSeguridad}"), versionSeguridadPanel1, org.jdesktop.beansbinding.BeanProperty.create("datos"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${datos.configuracion.entornoCobol}"), entornoCobolPanel1, org.jdesktop.beansbinding.BeanProperty.create("datos"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(entornoCobolPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 795, Short.MAX_VALUE)
                    .addComponent(versionSeguridadPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(entornoCobolPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(versionSeguridadPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

      fin();

}//GEN-LAST:event_jButton3ActionPerformed

  private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

      guardar();

}//GEN-LAST:event_jButton4ActionPerformed

  private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

      fin();

  }//GEN-LAST:event_formWindowClosing
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private es.cvjpy.cobol.EntornoCobolPanel entornoCobolPanel1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JPanel jPanel2;
    private es.cvjpy.aplicacion.VersionPanel versionSeguridadPanel1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    private final ModeloGuiPro auxiliar = new ModeloGuiPro(this);
    private ConfiguracionCli datos;
    public static final String PROP_DATOS = "datos";

    public ConfiguracionCli getDatos() {
        return datos;
    }

    public void setDatos(ConfiguracionCli datos) {
        ConfiguracionCli oldDatos = this.datos;
        this.datos = datos;
        firePropertyChange(PROP_DATOS, oldDatos, datos);
    }

    private void refresh() {
        firePropertyChange(PROP_DATOS, null, datos);
    }

    @Override
    public void inicio(PrincipalUIPro padre) {
        auxiliar.inicio(padre);
        ConfiguracionCli misdatos = new ConfiguracionCli();
        misdatos.setPrincipalPro(padre.getServidor());
        setDatos(misdatos);
        setVisible(true);
        refresh();
    }


    @Override
    public boolean puedosalir() {
        return auxiliar.puedosalir();
    }

    @Override
    public void fin() {
        if (auxiliar.getPadre() == null) {
            System.exit(0);
        } else {
            setVisible(false);
        }
    }

    private void guardar() {
        try {
            getDatos().guardarConfiguracion();
            setVisible(false);
            if (auxiliar.getPadre() != null) {
                java.awt.EventQueue.invokeLater(new Runnable() {

                    @Override
                    public void run() {
                        Thread t = new Thread(new Runnable() {

                            @Override
                            public void run() {
                                auxiliar.getPadre().reiniciar();
                            }
                        });
                        t.start();                  
                    }
                });
            }
        } catch (Exception ex) {
            Logger.getLogger(ConfiguracionDialog.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    @Override
    public boolean isIniciado() {
        return auxiliar.isIniciado();
    }

    @Override
    public void rellama() {
        setVisible(true);
    }
}
